#!/bin/bash 

REFDIR=$1
TAG=$2
GFF=$3
FA=$4
EXT_LEN=100 

if (( $# < 3 )) 
then 
  echo "Usage: prepare_bacpipe_reference.sh <ref_directory> <tag> <gff> <fa>, or"
  echo "       prepare_bacpipe_reference.sh <ref_directory> <tag> <gff> for Prokka-style GFF."
  exit 1
fi 

##   the following directory structure is implied: 
##   $REFDIR/Assemblies 
##   $REFDIR/bowtie2
##   $REFDIR/RSEM
##   $REFDIR/kallisto

##   1) check what sort of GFF file you're dealing with (if it has ^> in it)
##   we assume there's always ncRNA - if that's empty, scripts should still work 
 
PP1=`grep -P "^>" $GFF`
PP2=`grep -P "##FASTA" $GFF`

if [[ $PP1 != "" && $PP2 != "" && $FA == "" ]]
then 
  echo "The GFF file provided was identified as generated by Prokka! Continuing.." 
  N_CDS=`grep -c -P "\tCDS\t" $GFF`
  N_NCR=`grep -c -P "\tmisc_RNA\t" $GFF`
  echo "Found $N_CDS protein-coding (CDS) and $N_NCR non-coding RNA (misc_RNA) features!"
  grep -P "\tCDS\t" $GFF > $TAG.CDS.gff
  grep -P "\tmisc_RNA\t" $GFF | sed "s/misc_RNA/ncRNA/g" | \
  perl -ne 'm/.*;product=(.*)$/; $n=$1; s/inference=/Name=$n;inference=/; print' > $TAG.ncRNA.gff 
  ## make a special GFF file with all features collated into "gene", because reasons 
  sed "s/\tCDS\t/\tgene\t/g"   $TAG.CDS.gff   >  $TAG.gene.gff
  sed "s/\tncRNA\t/\tgene\t/g" $TAG.ncRNA.gff >> $TAG.gene.gff
  sort -k1,1 -k4,4n -k5,5n $TAG.gene.gff > $$.sorted.tmp
  mv $$.sorted.tmp $TAG.gene.gff
  extended_ref.pl $TAG.gene.gff $EXT_LEN > $TAG.extended.gff

  grep -v -P "^#" $GFF | grep -v "\t" > $TAG.genome.fa
  echo "Files $TAG.genome.fa, $TAG.CDS.gff, $TAG.ncRNA.gff, and $TAG.gene.gff successfully generated."
elif [[ $PP1 == "" && $PP2 == "" && $FA != "" ]]
then
  echo "Custom GFF/FA files provided! Continuing.."
  N_CDS=`grep -c -P "\tCDS\t" $GFF`
  N_NCR=`grep -c -P "\tmisc_RNA\t|\tncRNA\t" $GFF`
  echo "Found $N_CDS protein-coding (CDS) and $N_NCR non-coding RNA (misc_RNA/ncRNA) features!"
  grep -P "\tCDS\t" $GFF > $TAG.CDS.gff
  grep -P "\tmisc_RNA\t|\tncRNA\t" $GFF | sed "s/misc_RNA/ncRNA/g" > $TAG.ncRNA.gff 
  sed "s/\tCDS\t/\tgene\t/g"   $TAG.CDS.gff   >  $TAG.gene.gff
  sed "s/\tncRNA\t/\tgene\t/g" $TAG.ncRNA.gff >> $TAG.gene.gff
  sort -k1,1 -k4,4n -k5,5n $TAG.gene.gff > $$.sorted.tmp 
  mv $$.sorted.tmp $TAG.gene.gff
  extended_ref.pl $TAG.gene.gff $EXT_LEN > $TAG.extended.gff

  cp $FA $TAG.genome.fa
  echo "Files $TAG.genome.fa, $TAG.CDS.gff, $TAG.ncRNA.gff, and $TAG.gene.gff successfully generated."
else
  echo "ERROR: Either provide a Prokka-style GFF file, or a custom GFF/FA pair!"
fi 

##   3) make 3-col file: locus tag, gene name, and type (CDS/ncRNA). 

cat $TAG.CDS.gff $TAG.ncRNA.gff | \
perl -ne '$n; $id; @t=split/\t/; $t[8]=~m/^ID=(.*?);.*/; $id=$1; if ($t[8]=~m/.*;Name=(.*?);.*/) {$n=$1} else {$n=$id}; print "$id\t$n\t$t[2]\n"' > $TAG.3col 

##   4) run prokka on genome, find all of the rRNA sequences 

source activate prokka 
prokka --quiet --cpus 16 --outdir $TAG.prokka --prefix $TAG.prokka --locustag $TAG $TAG.genome.fa
source deactivate

grep -P "\ttRNA\t" $TAG.prokka/$TAG.prokka.gff | awk '{print $1"\t"$4-1"\t"$5"\ttRNA."NR"\t.\t"$7}' > $TAG.tRNA.bed
grep -P "\trRNA\t" $TAG.prokka/$TAG.prokka.gff | awk '{print $1"\t"$4-1"\t"$5"\trRNA."NR"\t.\t"$7}' > $TAG.rRNA.bed
bedtools getfasta -name -s -fi $TAG.genome.fa -bed $TAG.tRNA.bed -fo $TAG.tRNA.fa
bedtools getfasta -name -s -fi $TAG.genome.fa -bed $TAG.rRNA.bed -fo $TAG.rRNA.fa
rm -rf $TAG.prokka $TAG.tRNA.bed $TAG.rRNA.bed

##   5) *chrom.size reference 

samtools faidx $TAG.genome.fa
cut -f 1,2 $TAG.genome.fa.fai > $TAG.chrom.sizes 

##   6) bowtie2 reference 
bowtie2-build --quiet $TAG.genome.fa $TAG
bowtie2-build --quiet $TAG.tRNA.fa $TAG.tRNA
bowtie2-build --quiet $TAG.rRNA.fa $TAG.rRNA 

##   8) rsem/kallisto reference 
perl -ne '@t=split/\t+/; $t[8]=~m/ID=(.*?);.*/; printf "%s\t%d\t%d\t%s\t%s\t%s\n",$t[0],$t[3]-1,$t[4],$1,$t[5],$t[6]' \
$TAG.gene.gff > $TAG.tr.bed 
perl -ne '@t=split/\t+/; $t[8]=~m/ID=(.*?);.*/; printf "%s\t%d\t%d\t%s\t%s\t%s\n",$t[0],$t[3]-1,$t[4],$1,$t[5],$t[6]' \
$TAG.extended.gff > $TAG.extr.bed

bedtools getfasta -name -s -fi $TAG.genome.fa -bed $TAG.tr.bed | sed "s/[()+-]//g" > $TAG.tr.fa 
bedtools getfasta -name -s -fi $TAG.genome.fa -bed $TAG.extr.bed | sed "s/[()+-]//g" > $TAG.extr.fa

rm $TAG.tr.bed $TAG.extr.bed
kallisto index -i ${TAG}_kallisto $TAG.tr.fa
kallisto index -i ${TAG}_ext_kallisto $TAG.extr.fa
source activate rsem
rsem-prepare-reference $TAG.tr.fa ${TAG}_rsem
rsem-prepare-reference $TAG.extr.fa ${TAG}_ext_rsem

bowtie2-build $TAG.tr.fa ${TAG}_rsem
bowtie2-build $TAG.extr.fa ${TAG}_ext_rsem

##   9) copy to appropriate locations
mv ${TAG}_*rsem.*.bt2 $REFDIR/RSEM
mv *bt2 $REFDIR/bowtie2
mv $TAG.genome.fa $TAG.tRNA.fa $TAG.rRNA.fa $TAG.tr.fa $TAG.extr.fa $REFDIR/Assemblies
mv $TAG.gene.gff $TAG.extended.gff $TAG.CDS.gff $TAG.ncRNA.gff $REFDIR/Assemblies
mv $TAG.genome.fa.fai $TAG.chrom.sizes $TAG.3col $REFDIR/Assemblies
mv ${TAG}_*rsem* $REFDIR/RSEM
mv ${TAG}_*kallisto $REFDIR/kallisto 
